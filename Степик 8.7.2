#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <sstream>

int main()
{
	size_t N = 0;
	std::cin >> N;
	std::vector<size_t> S;
	std::vector<std::vector<size_t>> path(N + 1, std::vector<size_t>());
	S.push_back(0);
	S.push_back(0);       
	path[1].push_back(1); 
	for (size_t i = 2; i <= N; ++i) {
		size_t x_div_3 = std::numeric_limits<int>::max();
		if ((i % 3) == 0) x_div_3 = S[i / 3] + 1;
		size_t x_div_2 = std::numeric_limits<int>::max();
		if ((i % 2) == 0) x_div_2 = S[i / 2] + 1;
		size_t min_val = std::min({ x_div_3, x_div_2, S[i - 1] + 1 });
		S.push_back(min_val);
		if (min_val == x_div_3) { path[i] = path[i / 3]; path[i].push_back(i); }
		if (min_val == x_div_2) { path[i] = path[i / 2]; path[i].push_back(i); }
		if (min_val == S[i - 1] + 1) { path[i] = path[i - 1]; path[i].push_back(i); }
	}
	std::cout << S[N] << std::endl;
	for (auto elem : path[N]) std::cout << elem << " ";
	std::cout << std::endl;
	return 0;
}
